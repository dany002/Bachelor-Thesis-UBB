user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format format '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log format;

    # Define upstream servers (your Django backend)
    upstream api {
        server django:8000;
    }

    # Define rate limiting zone
    limit_req_zone $binary_remote_addr zone=mylimit:10m rate=20r/s;

    # Main server block
    server {
        listen 80;

        client_max_body_size 100M;

        root /var/angular_dist;
        index index.html;

        # Set headers for proxying
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # Handle robots.txt request
        location /robots.txt {
            return 200 "User-agent: *\nDisallow: /\n";
        }

        # Serve Angular static files
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Proxy API requests to Django backend
        location /api/ {
            limit_req zone=mylimit burst=20 nodelay;
            limit_req_status 444;
            proxy_pass http://api;
        }

        # Error pages
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    # Include additional configuration files if needed
    # include /etc/nginx/conf.d/*.conf;
}

